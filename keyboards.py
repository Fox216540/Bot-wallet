from telebot import types as typ

markup = typ.ReplyKeyboardMarkup(True,None,None)
item1 = typ.KeyboardButton('–ü—Ä–æ—Ñ–∏–ª—å')
item2 = typ.KeyboardButton('–û—Ç–∑—ã–≤—ã –ø–æ –≤—ã–≤–æ–¥—É')
item3 = typ.KeyboardButton('–ü–æ–¥–¥–µ—Ä–∂–∫–∞')
item4 = typ.KeyboardButton('–†–µ—Ñ–∫–∞')
item5 = typ.KeyboardButton('–°–∞–ø–µ—Ä')
item6 = typ.KeyboardButton('–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å')
item7 = typ.KeyboardButton('–ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å')
item8 = typ.KeyboardButton('–í—ã–≤–æ–¥')


markup.add(item1,item2,item3)
markup.add(item4,item5,item8)
markup.add(item7)

markup_admin = typ.ReplyKeyboardMarkup(True,one_time_keyboard=True)
item1 = typ.KeyboardButton('–†–∞—Å—Å—ã–ª–∫–∞')
item2 = typ.KeyboardButton('–ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å —é–∑–µ—Ä—É')
item3 = typ.KeyboardButton('–ó–∞–±—Ä–∞—Ç—å –±–∞–ª–∞–Ω—Å —é–∑–µ—Ä–∞')
item4 = typ.KeyboardButton('–£–¥–∞–ª–∏—Ç—å –∫–∞–Ω–∞–ª —Å–ø–æ–Ω—Å–æ—Ä–∞')
item5 = typ.KeyboardButton('–î–æ–±–∞–≤–∏—Ç—å –∫–∞–Ω–∞–ª —Å–ø–æ–Ω—Å–æ—Ä–∞')
item6 = typ.KeyboardButton('–°–ø–æ–Ω—Å–æ—Ä—Å–∫–∏–µ –∫–∞–Ω–∞–ª—ã')
item7 = typ.KeyboardButton('–ù–∞–∑–∞–¥')
item8 = typ.KeyboardButton('–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞')


markup_admin.add(item1,item2)
markup_admin.add(item3,item4)
markup_admin.add(item5,item6)
markup_admin.add(item7)
markup_admin.add(item8)

def keyboard(minefield,mine_positions):
    keyboard = typ.InlineKeyboardMarkup()
    stop = typ.InlineKeyboardButton(text=f"stop", callback_data=f"stop")
    for pos in mine_positions:
        row, col = divmod(pos, 5)
        minefield[row][col] = f"y {row} {col}"
    for x in minefield:
        # –¥–æ–±–∞–≤–ª—è–µ–º –Ω–∞ –Ω–µ–µ –¥–≤–µ –∫–Ω–æ–ø–∫–∏
        button1 = typ.InlineKeyboardButton(text=f"‚¨úÔ∏è", callback_data=f"{x[0]}")
        button2 = typ.InlineKeyboardButton(text=f"‚¨úÔ∏è", callback_data=f"{x[1]}")
        button3 = typ.InlineKeyboardButton(text=f"‚¨úÔ∏è", callback_data=f"{x[2]}")
        button4 = typ.InlineKeyboardButton(text=f"‚¨úÔ∏è", callback_data=f"{x[3]}")
        button5 = typ.InlineKeyboardButton(text=f"‚¨úÔ∏è", callback_data=f"{x[4]}")
        keyboard.row(button1, button2, button3, button4, button5)
    keyboard.add(stop)
    return keyboard

def keyboard_call(minefield):
    keyboard = typ.InlineKeyboardMarkup()
    stop = typ.InlineKeyboardButton(text=f"stop", callback_data=f"stop")
    for x in minefield:
        button1 = typ.InlineKeyboardButton(text=f"‚¨úÔ∏è", callback_data=f"{x[0]}")
        button2 = typ.InlineKeyboardButton(text=f"‚¨úÔ∏è", callback_data=f"{x[1]}")
        button3 = typ.InlineKeyboardButton(text=f"‚¨úÔ∏è", callback_data=f"{x[2]}")
        button4 = typ.InlineKeyboardButton(text=f"‚¨úÔ∏è", callback_data=f"{x[3]}")
        button5 = typ.InlineKeyboardButton(text=f"‚¨úÔ∏è", callback_data=f"{x[4]}")
        if x[0] == 'NULL':
            button1 = typ.InlineKeyboardButton(text=f"üåü", callback_data=f"NULL")
        if x[1] == 'NULL':
            button2 = typ.InlineKeyboardButton(text=f"üåü", callback_data=f"NULL")
        if x[2] == 'NULL':
            button3 = typ.InlineKeyboardButton(text=f"üåü", callback_data=f"NULL")
        if x[3] == 'NULL':
            button4 = typ.InlineKeyboardButton(text=f"üåü", callback_data=f"NULL")
        if x[4] == 'NULL':
            button5 = typ.InlineKeyboardButton(text=f"üåü", callback_data=f"NULL")
        keyboard.row(button1, button2, button3, button4, button5)
    keyboard.add(stop)
    return keyboard


